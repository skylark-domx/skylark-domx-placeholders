{"version":3,"sources":["create.js"],"names":["define","styler","noder","geom","placeholders","create","elm","placeholder","cssPosition","css","position","relativePosition","size","test","createElement","nodeName","display","visibility","datax","data","after","left","top"],"mappings":";;;;;;;AAAAA,QACC,sBACA,qBACA,oBACA,kBACC,SAASC,EAAOC,EAAMC,EAAKC,GAgD5B,OAAOA,EAAaC,OA9CpB,SAA4BC,GAC3B,IAAIC,EACHC,EAAcP,EAAOQ,IAAIH,EAAI,YAC7BI,EAAWP,EAAKQ,iBAAiBL,GAwClC,OAlCAL,EAAOQ,IAAIH,EAAKL,EAAOQ,IAAIH,GAAK,YAAY,eAAe,aAAc,iBACzEH,EAAKS,KAAKN,EAAIH,EAAKS,KAAKN,IAEnB,qBAAqBO,KAAML,KAC/BA,EAAc,WAEdD,EAAcL,EAAMY,cAAcR,EAAIS,UAEtCd,EAAOQ,IAAIF,GAGVS,QAAS,iBAAiBH,KAAMZ,EAAOQ,IAAIH,EAAI,YAC9C,eACA,QACDW,WAAY,WAIbhB,EAAOQ,IAAIF,EAAaN,EAAOQ,IAAIH,GAAK,YAAY,eAAe,aAAc,cAAc,WAE/FY,MAAMC,KAAKb,EAAK,cAAeC,GAE/BJ,EAAKS,KAAKL,EAAYJ,EAAKS,KAAKN,IAEhCJ,EAAMkB,MAAMd,EAAIC,IAIjBN,EAAOQ,IAAIH,GACVI,SAAUF,EACVa,KAAMX,EAASW,KACfC,IAAKZ,EAASY,MAGRf","file":"../create.js","sourcesContent":["define([\r\n\t\"skylark-domx-styler\",\r\n\t\"skylark-domx-noder\",\r\n\t\"skylark-domx-geom\",\r\n\t\"./placeholders\"\r\n],function(styler,noder,geom,placeholders){\r\n\t// Creates a placeholder element so that the original element can be made absolute\r\n\tfunction createPlaceholder( elm ) {\r\n\t\tvar placeholder,\r\n\t\t\tcssPosition = styler.css(elm,\"position\" ),\r\n\t\t\tposition = geom.relativePosition(elm);\r\n\r\n\t\t// Lock in margins first to account for form elements, which\r\n\t\t// will change margin if you explicitly set height\r\n\t\t// see: http://jsfiddle.net/JZSMt/3/ https://bugs.webkit.org/show_bug.cgi?id=107380\r\n\t\t// Support: Safari\r\n\t\tstyler.css(elm, styler.css(elm,[\"marginTop\",\"marginBottom\",\"marginLeft\", \"marginRight\"]));\r\n\t\tgeom.size(elm,geom.size(elm));\r\n\r\n\t\tif ( /^(static|relative)/.test( cssPosition ) ) {\r\n\t\t\tcssPosition = \"absolute\";\r\n\r\n\t\t\tplaceholder = noder.createElement(elm.nodeName);\r\n\r\n\t\t\tstyler.css(placeholder,{\r\n\t\t\t\t// Convert inline to inline block to account for inline elements\r\n\t\t\t\t// that turn to inline block based on content (like img)\r\n\t\t\t\tdisplay: /^(inline|ruby)/.test( styler.css(elm,\"display\" ) ) ?\r\n\t\t\t\t\t\"inline-block\" :\r\n\t\t\t\t\t\"block\",\r\n\t\t\t\tvisibility: \"hidden\"\r\n\t\t\t});\r\n\r\n\t\t\t// Margins need to be set to account for margin collapse\r\n\t\t\tstyler.css(placeholder, styler.css(elm,[\"marginTop\",\"marginBottom\",\"marginLeft\", \"marginRight\",\"float\"]));\r\n\r\n\t\t\tdatax.data(elm, \"placeholder\", placeholder );\r\n\r\n\t\t\tgeom.size(placeholder,geom.size(elm));\r\n\r\n\t\t\tnoder.after(elm,placeholder);\r\n\r\n\t\t}\r\n\r\n\t\tstyler.css(elm, {\r\n\t\t\tposition: cssPosition,\r\n\t\t\tleft: position.left,\r\n\t\t\ttop: position.top\r\n\t\t} );\r\n\r\n\t\treturn placeholder;\r\n\t}\r\n\r\n\treturn placeholders.create = createPlaceholder;\r\n\r\n});"]}